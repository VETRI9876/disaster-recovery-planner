name: CI/CD Pipeline - JFrog + AKS + ELK Monitoring

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP: myResourceGroup
  CLUSTER_NAME: MyAKSCluster
  JFROG_REGISTRY: trialn9oork.jfrog.io
  IMAGE_NAME: dr-dash-docker-local/dr-dash-app
  K8S_NAMESPACE: default

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Login to JFrog
      - name: Login to JFrog
        uses: docker/login-action@v2
        with:
          registry: ${{ env.JFROG_REGISTRY }}
          username: ${{ secrets.JFROG_USERNAME }}
          password: ${{ secrets.JFROG_API_KEY }}

      # Step 4: Build and Push Docker Image to JFrog
      - name: Build and Push Docker Image to JFrog
        run: |
          docker build -t $JFROG_REGISTRY/$IMAGE_NAME:latest .
          docker push $JFROG_REGISTRY/$IMAGE_NAME:latest

      # Step 5: Run Docker Container Locally
      - name: Run Docker Container Locally
        run: |
          docker run -d -p 8085:8085 $JFROG_REGISTRY/$IMAGE_NAME:latest

      # Step 6: Install Selenium and Run Tests
      - name: Run Selenium Tests
        run: |
          pip install selenium webdriver-manager
          python test_selenium.py

      # Step 7: Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 8: Get AKS Credentials
      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --overwrite-existing

      # Step 9: Deploy App to AKS
      - name: Deploy App to AKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
